<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Exposicion', 'doctrine');

/**
 * BaseExposicion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_panoramica
 * @property integer $codigo
 * @property string $nombre
 * @property string $descripcion
 * @property integer $num_sonido
 * @property integer $num_imagenes
 * @property integer $cord_x
 * @property integer $cord_y
 * @property boolean $estado
 * @property Panoramica $Panoramica
 * @property Doctrine_Collection $ExposicionImagen
 * @property Doctrine_Collection $ExposicionSonido
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getIdPanoramica()     Returns the current record's "id_panoramica" value
 * @method integer             getCodigo()           Returns the current record's "codigo" value
 * @method string              getNombre()           Returns the current record's "nombre" value
 * @method string              getDescripcion()      Returns the current record's "descripcion" value
 * @method integer             getNumSonido()        Returns the current record's "num_sonido" value
 * @method integer             getNumImagenes()      Returns the current record's "num_imagenes" value
 * @method integer             getCordX()            Returns the current record's "cord_x" value
 * @method integer             getCordY()            Returns the current record's "cord_y" value
 * @method boolean             getEstado()           Returns the current record's "estado" value
 * @method Panoramica          getPanoramica()       Returns the current record's "Panoramica" value
 * @method Doctrine_Collection getExposicionImagen() Returns the current record's "ExposicionImagen" collection
 * @method Doctrine_Collection getExposicionSonido() Returns the current record's "ExposicionSonido" collection
 * @method Exposicion          setId()               Sets the current record's "id" value
 * @method Exposicion          setIdPanoramica()     Sets the current record's "id_panoramica" value
 * @method Exposicion          setCodigo()           Sets the current record's "codigo" value
 * @method Exposicion          setNombre()           Sets the current record's "nombre" value
 * @method Exposicion          setDescripcion()      Sets the current record's "descripcion" value
 * @method Exposicion          setNumSonido()        Sets the current record's "num_sonido" value
 * @method Exposicion          setNumImagenes()      Sets the current record's "num_imagenes" value
 * @method Exposicion          setCordX()            Sets the current record's "cord_x" value
 * @method Exposicion          setCordY()            Sets the current record's "cord_y" value
 * @method Exposicion          setEstado()           Sets the current record's "estado" value
 * @method Exposicion          setPanoramica()       Sets the current record's "Panoramica" value
 * @method Exposicion          setExposicionImagen() Sets the current record's "ExposicionImagen" collection
 * @method Exposicion          setExposicionSonido() Sets the current record's "ExposicionSonido" collection
 * 
 * @package    mantenedor
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseExposicion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('exposicion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'exposicion_id',
             'length' => 4,
             ));
        $this->hasColumn('id_panoramica', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('num_sonido', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_imagenes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('cord_x', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('cord_y', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('estado', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => 'true',
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Panoramica', array(
             'local' => 'id_panoramica',
             'foreign' => 'id'));

        $this->hasMany('ExposicionImagen', array(
             'local' => 'id',
             'foreign' => 'id_exposicion'));

        $this->hasMany('ExposicionSonido', array(
             'local' => 'id',
             'foreign' => 'id_exposicion'));
    }
}