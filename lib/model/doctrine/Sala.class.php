<?php

/**
 * Sala
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    mantenedor
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Sala extends BaseSala
{
  function __toString(){
    return $this->getId()." ".$this->getNombre();
  }
  
  public function getPanoramica(){
    return Doctrine::getTable('Sala')->getPanoramicasDeSala($this->getId());
  }
  
  /**
   * Sala::getSalasMenosRecorrido()
   * 
   * @param mixed $id_recorrido
   * @return array de Salas que que tiene todas las salas del museo menos las del recorrido ingresado.
   */
  public static function getSalasMenosRecorrido($id_recorrido){
    
    $recorrido = Doctrine_Core::getTable('Recorrido')->find($id_recorrido);
    $salas = Doctrine_Core::getTable('Sala')->createQuery('a')->orderBy('a.sala_numero ASC')->execute();
    
    foreach($recorrido->getDetalleRecorrido() as $detalle_recorrido){
      $salas_de_recorrido[] = $detalle_recorrido->getSala();
    }
    
    foreach($salas as $sala){
      $salas_de_museo[] = $sala;
    }
    
    if(count($recorrido->getDetalleRecorrido())==0){
      return $salas_de_museo;
    }else{
      return array_diff($salas_de_museo, $salas_de_recorrido);  
    }
  }
  
  /**
   * Sala::quitarSalasSinGrabacion()
   * 
   * @param mixed $salas array de salas
   * @return array que contiene solo las salas que cuentan con un audio de grabacion.
   */
  public static function quitarSalasSinGrabacion($salas){
    
    $salas_con_grabacion = array();
    
    foreach($salas as $sala){
      $grabacion_recorrido = $sala->getGrabacionRecorrido();
      if($grabacion_recorrido[0]->getRutaSonido() && $sala->getEstado()){
        $salas_con_grabacion[] = $sala;
      }
    }
    return $salas_con_grabacion;
  } 
  
  public function getExposiciones(){
    /*
    foreach($this->getPanoramica() as $panoramica){
      foreach($panoramica->getExposicion() as $exposicion){
        $exposiciones[] = $exposicion;
      }
    }
    
    return $exposiciones;
    */
    
    return Doctrine::getTable('Sala')->getExposicionesDeSala($this->getId());
  }
  
  public function isPanoramicasActivadas(){
    $bandera = false;
    foreach($this->getPanoramica() as $panoramica){
      if($panoramica->getEstado()){
        $bandera = true;
      }
    }
    return $bandera;
  }
  
  public function cambiarEstadoEnCascada($estado){
    foreach($this->getPanoramica() as $panoramica){
      $panoramica->setEstado($estado);
      $panoramica->save();
      $panoramica->cambiarEstadoEnCascada($estado);
    }
  }
  
  /**
   * Sala::desactivarRecorridoSegunSala()
   * 
   * @return Array de los recorridos desativados. Si el retorno tiene largo 0, quiere decir que la sala no estaba en ningun recorrido.
   */
  public function desactivarRecorridoSegunSala(){
    
    $recorridos = array();
    
    foreach($this->getDetalleRecorrido() as $detalle_recorrido){
      $recorrido = $detalle_recorrido->getRecorrido();
      $recorrido->setEstado(false);
      $recorrido->save();
      $recorridos[] = $recorrido;
    }
    return $recorridos;
  }
  
  public function getRutaImagen(){
    $panoramicas = $this->getPanoramica();
    return $panoramicas[0]->getRutaImagen();
  }
  
  public function reordenarRecorridos(){
    $recorridos = array();
    foreach($this->getDetalleRecorrido() as $detalle_recorrido){
      $recorridos = $detalle_recorrido->getRecorrido();
    }
  }

}